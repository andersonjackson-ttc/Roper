Option Explicit

' read 3W and 8P schedules and create diddies for each room that is occupied
Public Sub createDiddies()
    
    ' declare variables
    Dim room As range
    Dim nameAndProf As Variant
    Dim i As Integer
    Dim j As Integer
    Dim roomCell As range
    Dim newString As String
    Dim newRoom As range
    Dim timeCreated As range
    Dim count3W As Integer
    Dim count8P As Integer
    Dim count3P As Integer
    
    ' set counters
    count3W = 0
    count8P = 0
    count3P = 0
    
    ' set timeCreated box in diddies sheet
    Set timeCreated = Sheets("All Diddies").range("$H$13")
    
    ' initialize first room cell for diddies; offset for next is (28,0)
    Set roomCell = Sheets("All Diddies").range("$B$4")
    
    ' disable alerts about replacing data in non-blank cells
    Application.DisplayAlerts = False
    
    ' loop though rooms on 3W schedule; if y AND z columns are BOTH empty for a room, do not add
    ' room to diddie; otherwise loop through time slots and add therapists to diddie
    For Each room In Sheets("3W Schedule").range("Rooms3WSchedule")
        ' if room is not empty, add it to diddies and get therapists
        If Not room.Offset(0, 23) = " " And Not room.Offset(0, 24) = " " And Not room.Offset(0, 23) = "" And Not room.Offset(0, 24) = "" Then
          ' add room number to first diddie
          roomCell.value = room.value
          ' increment 3W room count
          count3W = count3W + 1
          ' i will start two rows below roomCell in the 6:30 time slot
          i = 2
          ' j will count rows in 3W schedule
          For j = 1 To 22
            If Not IsEmpty(room.Offset(0, j)) And Not room.Offset(0, j) = " " Then
                ' put value in getNameAndProf function and return name, lunch or gray
                newString = getNameAndProf(room.Offset(0, j).value)
                ' if function returns therapist name or lunch, add to diddie
                If newString = "LUNCH" Or newString <> "GRAY" Then
                    roomCell.Offset(i, 0).value = newString
                End If
            End If
            ' increment row on diddie schedule
            i = i + 1
          Next j
          ' increment to next diddie room number
          Set roomCell = roomCell.Offset(28, 0)
        End If
    Next room
    
    ' keep roomCell reference and loop through 8P
    For Each newRoom In Sheets("8P Schedule").range("Rooms8PSchedule")
        ' if room is not empty, add it to diddies and get therapists
        If Not newRoom.Offset(0, 23) = " " And Not newRoom.Offset(0, 24) = " " And Not newRoom.Offset(0, 23) = "" And Not newRoom.Offset(0, 24) = "" Then
          ' add room number to first diddie
          roomCell.value = newRoom.value
          'increment 8P room count
          count8P = count8P + 1
          ' i will start two rows below roomCell in the 6:30 time slot
          i = 2
          ' j will count rows in 3W schedule
          For j = 1 To 22
            If Not IsEmpty(newRoom.Offset(0, j)) And Not newRoom.Offset(0, j) = " " Then
            ' put value in getNameAndProf function and return name, lunch or gray
                newString = getNameAndProf(newRoom.Offset(0, j).value)
                ' if function returns therapist name or lunch, add to diddie
                If newString = "LUNCH" Or newString <> "GRAY" Then
                    roomCell.Offset(i, 0).value = newString
                End If
            End If
            ' increment row on diddie schedule
            i = i + 1
          Next j
          ' increment to next diddie room number
          Set roomCell = roomCell.Offset(28, 0)
        End If
    Next newRoom
    

    ' display diddie counts
    Sheets("All Diddies").range("$I$7").value = count3W
    Sheets("All Diddies").range("$I$8").value = count8P
    Sheets("All Diddies").range("$I$9").value = count3P
    Sheets("All Diddies").range("$I$10").value = count3W + count8P + count3P
    
    ' show time the schedule was last created
    Call lastTimeCreated(timeCreated)
    
    ' turn alerts back on
    Application.DisplayAlerts = True
    
End Sub




