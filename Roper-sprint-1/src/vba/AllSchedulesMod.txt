Option Explicit
' apply conditional formatting to All Schedules
Public Sub allSchedCondFormat()
    ' declare variables
    Dim evalInt As range
    Dim roomCell As range
    Dim newEI As range
    Dim newRoom As range
    Dim evalInt8P As range
    Dim roomCell8P As range
    Dim newEI8P As range
    Dim newRoom8P As range
    Dim initialsBox As range
    Dim initialsCell As range
    Dim schedCell As range
    Dim initialsValue As String
     
    ' show that EVALs are highlighted in yellow
    With Sheets("All Schedules").range("EvalKeyBox")
        .value = "EVAL"
        .Font.Size = 9
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .Interior.ColorIndex = 36
    End With
     ' show that INTs are highlighted in pink
    With Sheets("All Schedules").range("IntKeyBox")
        .value = "INT"
        .Font.Size = 9
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .Interior.ColorIndex = 38
    End With
    
    ' highlight rooms in 3W with EVALs in yellow
    For Each evalInt In Sheets("3W Schedule").range("Eval_Int_3W")
        If LCase(evalInt.value) = "eval" Then
            For Each roomCell In Sheets("All Schedules").range("RoomsAllSchedules")
               If evalInt.Offset(0, 1).value = roomCell.value Then
                roomCell.Interior.ColorIndex = 36
               End If
            Next roomCell
        End If
    Next evalInt
        
      ' highlight rooms in 3W with INTs in pink
    For Each newEI In Sheets("3W Schedule").range("Eval_Int_3W")
        If LCase(newEI.value) = "int" Then
            For Each newRoom In Sheets("All Schedules").range("RoomsAllSchedules")
               If newEI.Offset(0, 1).value = newRoom.value Then
                newRoom.Interior.ColorIndex = 38
               End If
            Next newRoom
        End If
    Next newEI
    
    ' highlight rooms in 8P with EVALs in yellow
    For Each evalInt8P In Sheets("8P Schedule").range("Eval_Int_8P")
        If LCase(evalInt8P.value) = "eval" Then
            For Each roomCell8P In Sheets("All Schedules").range("RoomsAllSchedules")
               If evalInt8P.Offset(0, 1).value = roomCell8P.value Then
                roomCell8P.Interior.ColorIndex = 36
               End If
            Next roomCell8P
        End If
    Next evalInt8P
        
      ' highlight rooms in 8P with INTs in pink
    For Each newEI8P In Sheets("8P Schedule").range("Eval_Int_8P")
        If LCase(newEI8P.value) = "int" Then
            For Each newRoom8P In Sheets("All Schedules").range("RoomsAllSchedules")
               If newEI8P.Offset(0, 1).value = newRoom8P.value Then
                newRoom8P.Interior.ColorIndex = 38
               End If
            Next newRoom8P
        End If
    Next newEI8P
    
    ' highlight therapist's rooms on schedule in a different yellow
    For Each initialsCell In Sheets("All Schedules").range("AllSchedTherapistInitialsBox")
        For Each schedCell In Sheets("All Schedules").range(initialsCell.Offset(3, -10), initialsCell.Offset(20, 11))
            If Not IsEmpty(schedCell) Then
                initialsValue = returnInitials(schedCell.value)
                If initialsCell.value = initialsValue Then
                    schedCell.Interior.ColorIndex = 6
                End If
            End If
        Next schedCell
    Next initialsCell
    
End Sub
' read 3W and 8P schedules and copy into All Schedules
Public Sub readSchedules()
    Dim initials As String
    Dim initialsArray As Object
    Dim counter As Integer
    Dim schedCell As range
    Dim schedCell2 As range
    Dim initialsBox As range
    Dim therCounter As Integer
    Dim r1 As range
    Dim r2 As range
    Dim cell1 As range
    Dim cell2 As range
    Dim str1 As String
    Dim str2 As String
    Dim i As Integer
    
    
     
    ' create initials arraylist
    Set initialsArray = CreateObject("System.Collections.ArrayList")
    
    ' loop through 3W to get initials; add to arraylist
    For Each schedCell In Sheets("3W Schedule").range("SchedGrid3W")
        If Not IsEmpty(schedCell) And schedCell.value <> " " And schedCell.value <> "" And Not IsNumeric(Left(schedCell.value, 1)) Then
            initials = schedCell.value
            If isGray(initials) = False And LCase(Trim(initials)) <> "lunch" Then
                 initials = returnInitials(initials)
                If Not initialsArray.Contains(initials) And initials <> "NOTE" Then
                    initialsArray.Add (UCase(initials))
                End If
            End If
        End If
    Next schedCell
    
    ' loop through 8P to get initials; add to arraylist
    For Each schedCell2 In Sheets("8P Schedule").range("SchedGrid8P")
        If Not IsEmpty(schedCell2) And schedCell2.value <> " " And schedCell2.value <> "" And Not IsNumeric(Left(schedCell2.value, 1)) Then
            initials = schedCell2.value
            If isGray(initials) = False And LCase(Trim(initials)) <> "lunch" Then
                 initials = returnInitials(initials)
                If Not initialsArray.Contains(initials) And initials <> "NOTE" Then
                    initialsArray.Add (UCase(initials))
                End If
            End If
        End If
    Next schedCell2
    
   ' add initials to All Schedules
   
   ' initialize counter
   counter = 0
   For Each initialsBox In Sheets("All Schedules").range("AllSchedTherapistInitialsBox")
        initialsBox.value = initialsArray.Item(counter)
        counter = counter + 1
        If counter > initialsArray.Count - 1 Then
            Exit For
        End If
   Next initialsBox
   
   ' look at each row in 3W and 8P schedules; if initials match initials in row
   ' copy room and schedule row and paste into all schedules
   ' initialize row counter
   i = 3
   For Each cell1 In Sheets("All Schedules").range("AllSchedTherapistInitialsBox")
        ' look at 3W Schedule
        For Each r1 In Sheets("3W Schedule").range("SchedGrid3W").Rows
            str1 = "ADL " + CStr(cell1.value)
            str2 = "ADL" + CStr(cell1.value)
            If Application.WorksheetFunction.CountIf(r1, cell1.value) > 0 Or Application.WorksheetFunction.CountIf(r1, str1) > 0 Or Application.WorksheetFunction.CountIf(r1, str2) > 0 Then
                cell1.Offset(i, -14).value = r1.Cells(1, 1).value
                range(r1.Cells(1, 2), r1.Cells(1, 23)).Copy
                range(cell1.Offset(i, -10), cell1.Offset(i, 11)).PasteSpecial xlPasteValues
                ' go to next row in schedule
                i = i + 1
            End If
        Next r1
        ' look at 8P schedule
        For Each r2 In Sheets("8P Schedule").range("SchedGrid8P").Rows
            str1 = "ADL " + CStr(cell1.value)
            str2 = "ADL" + CStr(cell1.value)
            If Application.WorksheetFunction.CountIf(r2, cell1.value) > 0 Or Application.WorksheetFunction.CountIf(r2, str1) > 0 Or Application.WorksheetFunction.CountIf(r2, str2) > 0 Then
                cell1.Offset(i, -14).value = r2.Cells(1, 1).value
                range(r2.Cells(1, 2), r2.Cells(1, 23)).Copy
                range(cell1.Offset(i, -10), cell1.Offset(i, 11)).PasteSpecial xlPasteValues
                ' go to next row in schedule
                i = i + 1
            End If
        Next r2
   ' reset row number for next schedule
   i = 3
   Next cell1
   Application.CutCopyMode = False
   
   
  

End Sub

' clear highlighting and old data and populate schedules; scroll back to top of page
Public Sub createSchedules()
    ' declare variables
    Dim timeCreated As range
    
    ' clear highlighting and previous info
    Call clearAllSched
    ' set box for displaying time schedule was created
    Set timeCreated = Sheets("All Schedules").range("$AC$8")
    
    ' disable alerts about replacing data in non-blank cells
    Application.DisplayAlerts = False
    
    ' read schedules
    Call readSchedules
    ' show time created
    Call lastTimeCreated(timeCreated)
    ' apply highlighting
    Call allSchedCondFormat
    ' go back to top of sheet
    ActiveWindow.ScrollRow = 1
    ' turn alerts back on
    Application.DisplayAlerts = True
    
End Sub



